/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as LocaleIndexImport } from './routes/$locale/index'
import { Route as LocaleAdminImport } from './routes/$locale/admin'
import { Route as LocaleAdminIndexImport } from './routes/$locale/admin/index'
import { Route as LocaleAuthVerifyEmailImport } from './routes/$locale/auth.verify-email'
import { Route as LocaleAuthLoginImport } from './routes/$locale/auth.login'
import { Route as LocaleAuthCreateTeamImport } from './routes/$locale/auth.create-team'
import { Route as LocaleAdminApiKeysIndexImport } from './routes/$locale/admin/api-keys.index'
import { Route as LocaleAdminScenariosCreateImport } from './routes/$locale/admin/scenarios.create'
import { Route as LocaleAdminScenariosIdImport } from './routes/$locale/admin/scenarios.$id'
import { Route as LocaleAdminPersonasCreateImport } from './routes/$locale/admin/personas.create'
import { Route as LocaleAdminPersonasIdImport } from './routes/$locale/admin/personas.$id'
import { Route as LocaleAdminModulesCreateImport } from './routes/$locale/admin/modules.create'
import { Route as LocaleAdminContextsCreateImport } from './routes/$locale/admin/contexts.create'
import { Route as LocaleAdminContextsIdImport } from './routes/$locale/admin/contexts.$id'
import { Route as LocaleAdminApiKeysCreateImport } from './routes/$locale/admin/api-keys.create'
import { Route as LocaleAdminModulesIdIndexImport } from './routes/$locale/admin/modules.$id.index'
import { Route as LocaleAdminModulesIdPlayImport } from './routes/$locale/admin/modules.$id.play'

// Create/Update Routes

const LocaleIndexRoute = LocaleIndexImport.update({
  id: '/$locale/',
  path: '/$locale/',
  getParentRoute: () => rootRoute,
} as any)

const LocaleAdminRoute = LocaleAdminImport.update({
  id: '/$locale/admin',
  path: '/$locale/admin',
  getParentRoute: () => rootRoute,
} as any)

const LocaleAdminIndexRoute = LocaleAdminIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => LocaleAdminRoute,
} as any)

const LocaleAuthVerifyEmailRoute = LocaleAuthVerifyEmailImport.update({
  id: '/$locale/auth/verify-email',
  path: '/$locale/auth/verify-email',
  getParentRoute: () => rootRoute,
} as any)

const LocaleAuthLoginRoute = LocaleAuthLoginImport.update({
  id: '/$locale/auth/login',
  path: '/$locale/auth/login',
  getParentRoute: () => rootRoute,
} as any)

const LocaleAuthCreateTeamRoute = LocaleAuthCreateTeamImport.update({
  id: '/$locale/auth/create-team',
  path: '/$locale/auth/create-team',
  getParentRoute: () => rootRoute,
} as any)

const LocaleAdminApiKeysIndexRoute = LocaleAdminApiKeysIndexImport.update({
  id: '/api-keys/',
  path: '/api-keys/',
  getParentRoute: () => LocaleAdminRoute,
} as any)

const LocaleAdminScenariosCreateRoute = LocaleAdminScenariosCreateImport.update(
  {
    id: '/scenarios/create',
    path: '/scenarios/create',
    getParentRoute: () => LocaleAdminRoute,
  } as any,
)

const LocaleAdminScenariosIdRoute = LocaleAdminScenariosIdImport.update({
  id: '/scenarios/$id',
  path: '/scenarios/$id',
  getParentRoute: () => LocaleAdminRoute,
} as any)

const LocaleAdminPersonasCreateRoute = LocaleAdminPersonasCreateImport.update({
  id: '/personas/create',
  path: '/personas/create',
  getParentRoute: () => LocaleAdminRoute,
} as any)

const LocaleAdminPersonasIdRoute = LocaleAdminPersonasIdImport.update({
  id: '/personas/$id',
  path: '/personas/$id',
  getParentRoute: () => LocaleAdminRoute,
} as any)

const LocaleAdminModulesCreateRoute = LocaleAdminModulesCreateImport.update({
  id: '/modules/create',
  path: '/modules/create',
  getParentRoute: () => LocaleAdminRoute,
} as any)

const LocaleAdminContextsCreateRoute = LocaleAdminContextsCreateImport.update({
  id: '/contexts/create',
  path: '/contexts/create',
  getParentRoute: () => LocaleAdminRoute,
} as any)

const LocaleAdminContextsIdRoute = LocaleAdminContextsIdImport.update({
  id: '/contexts/$id',
  path: '/contexts/$id',
  getParentRoute: () => LocaleAdminRoute,
} as any)

const LocaleAdminApiKeysCreateRoute = LocaleAdminApiKeysCreateImport.update({
  id: '/api-keys/create',
  path: '/api-keys/create',
  getParentRoute: () => LocaleAdminRoute,
} as any)

const LocaleAdminModulesIdIndexRoute = LocaleAdminModulesIdIndexImport.update({
  id: '/modules/$id/',
  path: '/modules/$id/',
  getParentRoute: () => LocaleAdminRoute,
} as any)

const LocaleAdminModulesIdPlayRoute = LocaleAdminModulesIdPlayImport.update({
  id: '/modules/$id/play',
  path: '/modules/$id/play',
  getParentRoute: () => LocaleAdminRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/$locale/admin': {
      id: '/$locale/admin'
      path: '/$locale/admin'
      fullPath: '/$locale/admin'
      preLoaderRoute: typeof LocaleAdminImport
      parentRoute: typeof rootRoute
    }
    '/$locale/': {
      id: '/$locale/'
      path: '/$locale'
      fullPath: '/$locale'
      preLoaderRoute: typeof LocaleIndexImport
      parentRoute: typeof rootRoute
    }
    '/$locale/auth/create-team': {
      id: '/$locale/auth/create-team'
      path: '/$locale/auth/create-team'
      fullPath: '/$locale/auth/create-team'
      preLoaderRoute: typeof LocaleAuthCreateTeamImport
      parentRoute: typeof rootRoute
    }
    '/$locale/auth/login': {
      id: '/$locale/auth/login'
      path: '/$locale/auth/login'
      fullPath: '/$locale/auth/login'
      preLoaderRoute: typeof LocaleAuthLoginImport
      parentRoute: typeof rootRoute
    }
    '/$locale/auth/verify-email': {
      id: '/$locale/auth/verify-email'
      path: '/$locale/auth/verify-email'
      fullPath: '/$locale/auth/verify-email'
      preLoaderRoute: typeof LocaleAuthVerifyEmailImport
      parentRoute: typeof rootRoute
    }
    '/$locale/admin/': {
      id: '/$locale/admin/'
      path: '/'
      fullPath: '/$locale/admin/'
      preLoaderRoute: typeof LocaleAdminIndexImport
      parentRoute: typeof LocaleAdminImport
    }
    '/$locale/admin/api-keys/create': {
      id: '/$locale/admin/api-keys/create'
      path: '/api-keys/create'
      fullPath: '/$locale/admin/api-keys/create'
      preLoaderRoute: typeof LocaleAdminApiKeysCreateImport
      parentRoute: typeof LocaleAdminImport
    }
    '/$locale/admin/contexts/$id': {
      id: '/$locale/admin/contexts/$id'
      path: '/contexts/$id'
      fullPath: '/$locale/admin/contexts/$id'
      preLoaderRoute: typeof LocaleAdminContextsIdImport
      parentRoute: typeof LocaleAdminImport
    }
    '/$locale/admin/contexts/create': {
      id: '/$locale/admin/contexts/create'
      path: '/contexts/create'
      fullPath: '/$locale/admin/contexts/create'
      preLoaderRoute: typeof LocaleAdminContextsCreateImport
      parentRoute: typeof LocaleAdminImport
    }
    '/$locale/admin/modules/create': {
      id: '/$locale/admin/modules/create'
      path: '/modules/create'
      fullPath: '/$locale/admin/modules/create'
      preLoaderRoute: typeof LocaleAdminModulesCreateImport
      parentRoute: typeof LocaleAdminImport
    }
    '/$locale/admin/personas/$id': {
      id: '/$locale/admin/personas/$id'
      path: '/personas/$id'
      fullPath: '/$locale/admin/personas/$id'
      preLoaderRoute: typeof LocaleAdminPersonasIdImport
      parentRoute: typeof LocaleAdminImport
    }
    '/$locale/admin/personas/create': {
      id: '/$locale/admin/personas/create'
      path: '/personas/create'
      fullPath: '/$locale/admin/personas/create'
      preLoaderRoute: typeof LocaleAdminPersonasCreateImport
      parentRoute: typeof LocaleAdminImport
    }
    '/$locale/admin/scenarios/$id': {
      id: '/$locale/admin/scenarios/$id'
      path: '/scenarios/$id'
      fullPath: '/$locale/admin/scenarios/$id'
      preLoaderRoute: typeof LocaleAdminScenariosIdImport
      parentRoute: typeof LocaleAdminImport
    }
    '/$locale/admin/scenarios/create': {
      id: '/$locale/admin/scenarios/create'
      path: '/scenarios/create'
      fullPath: '/$locale/admin/scenarios/create'
      preLoaderRoute: typeof LocaleAdminScenariosCreateImport
      parentRoute: typeof LocaleAdminImport
    }
    '/$locale/admin/api-keys/': {
      id: '/$locale/admin/api-keys/'
      path: '/api-keys'
      fullPath: '/$locale/admin/api-keys'
      preLoaderRoute: typeof LocaleAdminApiKeysIndexImport
      parentRoute: typeof LocaleAdminImport
    }
    '/$locale/admin/modules/$id/play': {
      id: '/$locale/admin/modules/$id/play'
      path: '/modules/$id/play'
      fullPath: '/$locale/admin/modules/$id/play'
      preLoaderRoute: typeof LocaleAdminModulesIdPlayImport
      parentRoute: typeof LocaleAdminImport
    }
    '/$locale/admin/modules/$id/': {
      id: '/$locale/admin/modules/$id/'
      path: '/modules/$id'
      fullPath: '/$locale/admin/modules/$id'
      preLoaderRoute: typeof LocaleAdminModulesIdIndexImport
      parentRoute: typeof LocaleAdminImport
    }
  }
}

// Create and export the route tree

interface LocaleAdminRouteChildren {
  LocaleAdminIndexRoute: typeof LocaleAdminIndexRoute
  LocaleAdminApiKeysCreateRoute: typeof LocaleAdminApiKeysCreateRoute
  LocaleAdminContextsIdRoute: typeof LocaleAdminContextsIdRoute
  LocaleAdminContextsCreateRoute: typeof LocaleAdminContextsCreateRoute
  LocaleAdminModulesCreateRoute: typeof LocaleAdminModulesCreateRoute
  LocaleAdminPersonasIdRoute: typeof LocaleAdminPersonasIdRoute
  LocaleAdminPersonasCreateRoute: typeof LocaleAdminPersonasCreateRoute
  LocaleAdminScenariosIdRoute: typeof LocaleAdminScenariosIdRoute
  LocaleAdminScenariosCreateRoute: typeof LocaleAdminScenariosCreateRoute
  LocaleAdminApiKeysIndexRoute: typeof LocaleAdminApiKeysIndexRoute
  LocaleAdminModulesIdPlayRoute: typeof LocaleAdminModulesIdPlayRoute
  LocaleAdminModulesIdIndexRoute: typeof LocaleAdminModulesIdIndexRoute
}

const LocaleAdminRouteChildren: LocaleAdminRouteChildren = {
  LocaleAdminIndexRoute: LocaleAdminIndexRoute,
  LocaleAdminApiKeysCreateRoute: LocaleAdminApiKeysCreateRoute,
  LocaleAdminContextsIdRoute: LocaleAdminContextsIdRoute,
  LocaleAdminContextsCreateRoute: LocaleAdminContextsCreateRoute,
  LocaleAdminModulesCreateRoute: LocaleAdminModulesCreateRoute,
  LocaleAdminPersonasIdRoute: LocaleAdminPersonasIdRoute,
  LocaleAdminPersonasCreateRoute: LocaleAdminPersonasCreateRoute,
  LocaleAdminScenariosIdRoute: LocaleAdminScenariosIdRoute,
  LocaleAdminScenariosCreateRoute: LocaleAdminScenariosCreateRoute,
  LocaleAdminApiKeysIndexRoute: LocaleAdminApiKeysIndexRoute,
  LocaleAdminModulesIdPlayRoute: LocaleAdminModulesIdPlayRoute,
  LocaleAdminModulesIdIndexRoute: LocaleAdminModulesIdIndexRoute,
}

const LocaleAdminRouteWithChildren = LocaleAdminRoute._addFileChildren(
  LocaleAdminRouteChildren,
)

export interface FileRoutesByFullPath {
  '/$locale/admin': typeof LocaleAdminRouteWithChildren
  '/$locale': typeof LocaleIndexRoute
  '/$locale/auth/create-team': typeof LocaleAuthCreateTeamRoute
  '/$locale/auth/login': typeof LocaleAuthLoginRoute
  '/$locale/auth/verify-email': typeof LocaleAuthVerifyEmailRoute
  '/$locale/admin/': typeof LocaleAdminIndexRoute
  '/$locale/admin/api-keys/create': typeof LocaleAdminApiKeysCreateRoute
  '/$locale/admin/contexts/$id': typeof LocaleAdminContextsIdRoute
  '/$locale/admin/contexts/create': typeof LocaleAdminContextsCreateRoute
  '/$locale/admin/modules/create': typeof LocaleAdminModulesCreateRoute
  '/$locale/admin/personas/$id': typeof LocaleAdminPersonasIdRoute
  '/$locale/admin/personas/create': typeof LocaleAdminPersonasCreateRoute
  '/$locale/admin/scenarios/$id': typeof LocaleAdminScenariosIdRoute
  '/$locale/admin/scenarios/create': typeof LocaleAdminScenariosCreateRoute
  '/$locale/admin/api-keys': typeof LocaleAdminApiKeysIndexRoute
  '/$locale/admin/modules/$id/play': typeof LocaleAdminModulesIdPlayRoute
  '/$locale/admin/modules/$id': typeof LocaleAdminModulesIdIndexRoute
}

export interface FileRoutesByTo {
  '/$locale': typeof LocaleIndexRoute
  '/$locale/auth/create-team': typeof LocaleAuthCreateTeamRoute
  '/$locale/auth/login': typeof LocaleAuthLoginRoute
  '/$locale/auth/verify-email': typeof LocaleAuthVerifyEmailRoute
  '/$locale/admin': typeof LocaleAdminIndexRoute
  '/$locale/admin/api-keys/create': typeof LocaleAdminApiKeysCreateRoute
  '/$locale/admin/contexts/$id': typeof LocaleAdminContextsIdRoute
  '/$locale/admin/contexts/create': typeof LocaleAdminContextsCreateRoute
  '/$locale/admin/modules/create': typeof LocaleAdminModulesCreateRoute
  '/$locale/admin/personas/$id': typeof LocaleAdminPersonasIdRoute
  '/$locale/admin/personas/create': typeof LocaleAdminPersonasCreateRoute
  '/$locale/admin/scenarios/$id': typeof LocaleAdminScenariosIdRoute
  '/$locale/admin/scenarios/create': typeof LocaleAdminScenariosCreateRoute
  '/$locale/admin/api-keys': typeof LocaleAdminApiKeysIndexRoute
  '/$locale/admin/modules/$id/play': typeof LocaleAdminModulesIdPlayRoute
  '/$locale/admin/modules/$id': typeof LocaleAdminModulesIdIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/$locale/admin': typeof LocaleAdminRouteWithChildren
  '/$locale/': typeof LocaleIndexRoute
  '/$locale/auth/create-team': typeof LocaleAuthCreateTeamRoute
  '/$locale/auth/login': typeof LocaleAuthLoginRoute
  '/$locale/auth/verify-email': typeof LocaleAuthVerifyEmailRoute
  '/$locale/admin/': typeof LocaleAdminIndexRoute
  '/$locale/admin/api-keys/create': typeof LocaleAdminApiKeysCreateRoute
  '/$locale/admin/contexts/$id': typeof LocaleAdminContextsIdRoute
  '/$locale/admin/contexts/create': typeof LocaleAdminContextsCreateRoute
  '/$locale/admin/modules/create': typeof LocaleAdminModulesCreateRoute
  '/$locale/admin/personas/$id': typeof LocaleAdminPersonasIdRoute
  '/$locale/admin/personas/create': typeof LocaleAdminPersonasCreateRoute
  '/$locale/admin/scenarios/$id': typeof LocaleAdminScenariosIdRoute
  '/$locale/admin/scenarios/create': typeof LocaleAdminScenariosCreateRoute
  '/$locale/admin/api-keys/': typeof LocaleAdminApiKeysIndexRoute
  '/$locale/admin/modules/$id/play': typeof LocaleAdminModulesIdPlayRoute
  '/$locale/admin/modules/$id/': typeof LocaleAdminModulesIdIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/$locale/admin'
    | '/$locale'
    | '/$locale/auth/create-team'
    | '/$locale/auth/login'
    | '/$locale/auth/verify-email'
    | '/$locale/admin/'
    | '/$locale/admin/api-keys/create'
    | '/$locale/admin/contexts/$id'
    | '/$locale/admin/contexts/create'
    | '/$locale/admin/modules/create'
    | '/$locale/admin/personas/$id'
    | '/$locale/admin/personas/create'
    | '/$locale/admin/scenarios/$id'
    | '/$locale/admin/scenarios/create'
    | '/$locale/admin/api-keys'
    | '/$locale/admin/modules/$id/play'
    | '/$locale/admin/modules/$id'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/$locale'
    | '/$locale/auth/create-team'
    | '/$locale/auth/login'
    | '/$locale/auth/verify-email'
    | '/$locale/admin'
    | '/$locale/admin/api-keys/create'
    | '/$locale/admin/contexts/$id'
    | '/$locale/admin/contexts/create'
    | '/$locale/admin/modules/create'
    | '/$locale/admin/personas/$id'
    | '/$locale/admin/personas/create'
    | '/$locale/admin/scenarios/$id'
    | '/$locale/admin/scenarios/create'
    | '/$locale/admin/api-keys'
    | '/$locale/admin/modules/$id/play'
    | '/$locale/admin/modules/$id'
  id:
    | '__root__'
    | '/$locale/admin'
    | '/$locale/'
    | '/$locale/auth/create-team'
    | '/$locale/auth/login'
    | '/$locale/auth/verify-email'
    | '/$locale/admin/'
    | '/$locale/admin/api-keys/create'
    | '/$locale/admin/contexts/$id'
    | '/$locale/admin/contexts/create'
    | '/$locale/admin/modules/create'
    | '/$locale/admin/personas/$id'
    | '/$locale/admin/personas/create'
    | '/$locale/admin/scenarios/$id'
    | '/$locale/admin/scenarios/create'
    | '/$locale/admin/api-keys/'
    | '/$locale/admin/modules/$id/play'
    | '/$locale/admin/modules/$id/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  LocaleAdminRoute: typeof LocaleAdminRouteWithChildren
  LocaleIndexRoute: typeof LocaleIndexRoute
  LocaleAuthCreateTeamRoute: typeof LocaleAuthCreateTeamRoute
  LocaleAuthLoginRoute: typeof LocaleAuthLoginRoute
  LocaleAuthVerifyEmailRoute: typeof LocaleAuthVerifyEmailRoute
}

const rootRouteChildren: RootRouteChildren = {
  LocaleAdminRoute: LocaleAdminRouteWithChildren,
  LocaleIndexRoute: LocaleIndexRoute,
  LocaleAuthCreateTeamRoute: LocaleAuthCreateTeamRoute,
  LocaleAuthLoginRoute: LocaleAuthLoginRoute,
  LocaleAuthVerifyEmailRoute: LocaleAuthVerifyEmailRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/$locale/admin",
        "/$locale/",
        "/$locale/auth/create-team",
        "/$locale/auth/login",
        "/$locale/auth/verify-email"
      ]
    },
    "/$locale/admin": {
      "filePath": "$locale/admin.tsx",
      "children": [
        "/$locale/admin/",
        "/$locale/admin/api-keys/create",
        "/$locale/admin/contexts/$id",
        "/$locale/admin/contexts/create",
        "/$locale/admin/modules/create",
        "/$locale/admin/personas/$id",
        "/$locale/admin/personas/create",
        "/$locale/admin/scenarios/$id",
        "/$locale/admin/scenarios/create",
        "/$locale/admin/api-keys/",
        "/$locale/admin/modules/$id/play",
        "/$locale/admin/modules/$id/"
      ]
    },
    "/$locale/": {
      "filePath": "$locale/index.tsx"
    },
    "/$locale/auth/create-team": {
      "filePath": "$locale/auth.create-team.tsx"
    },
    "/$locale/auth/login": {
      "filePath": "$locale/auth.login.tsx"
    },
    "/$locale/auth/verify-email": {
      "filePath": "$locale/auth.verify-email.tsx"
    },
    "/$locale/admin/": {
      "filePath": "$locale/admin/index.tsx",
      "parent": "/$locale/admin"
    },
    "/$locale/admin/api-keys/create": {
      "filePath": "$locale/admin/api-keys.create.tsx",
      "parent": "/$locale/admin"
    },
    "/$locale/admin/contexts/$id": {
      "filePath": "$locale/admin/contexts.$id.tsx",
      "parent": "/$locale/admin"
    },
    "/$locale/admin/contexts/create": {
      "filePath": "$locale/admin/contexts.create.tsx",
      "parent": "/$locale/admin"
    },
    "/$locale/admin/modules/create": {
      "filePath": "$locale/admin/modules.create.tsx",
      "parent": "/$locale/admin"
    },
    "/$locale/admin/personas/$id": {
      "filePath": "$locale/admin/personas.$id.tsx",
      "parent": "/$locale/admin"
    },
    "/$locale/admin/personas/create": {
      "filePath": "$locale/admin/personas.create.tsx",
      "parent": "/$locale/admin"
    },
    "/$locale/admin/scenarios/$id": {
      "filePath": "$locale/admin/scenarios.$id.tsx",
      "parent": "/$locale/admin"
    },
    "/$locale/admin/scenarios/create": {
      "filePath": "$locale/admin/scenarios.create.tsx",
      "parent": "/$locale/admin"
    },
    "/$locale/admin/api-keys/": {
      "filePath": "$locale/admin/api-keys.index.tsx",
      "parent": "/$locale/admin"
    },
    "/$locale/admin/modules/$id/play": {
      "filePath": "$locale/admin/modules.$id.play.tsx",
      "parent": "/$locale/admin"
    },
    "/$locale/admin/modules/$id/": {
      "filePath": "$locale/admin/modules.$id.index.tsx",
      "parent": "/$locale/admin"
    }
  }
}
ROUTE_MANIFEST_END */
