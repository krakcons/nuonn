/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createServerRootRoute } from '@tanstack/react-start/server'

import { Route as rootRouteImport } from './routes/__root'
import { Route as LocaleIndexRouteImport } from './routes/$locale/index'
import { Route as LocaleAdminRouteImport } from './routes/$locale/admin'
import { Route as LocaleAdminIndexRouteImport } from './routes/$locale/admin/index'
import { Route as LocaleAuthVerifyEmailRouteImport } from './routes/$locale/auth.verify-email'
import { Route as LocaleAuthLoginRouteImport } from './routes/$locale/auth.login'
import { Route as LocaleAuthCreateTeamRouteImport } from './routes/$locale/auth.create-team'
import { Route as LocaleAdminApiKeysIndexRouteImport } from './routes/$locale/admin/api-keys.index'
import { Route as LocaleModulesIdChatRouteImport } from './routes/$locale/modules.$id.chat'
import { Route as LocaleAdminScenariosCreateRouteImport } from './routes/$locale/admin/scenarios.create'
import { Route as LocaleAdminScenariosIdRouteImport } from './routes/$locale/admin/scenarios.$id'
import { Route as LocaleAdminModulesCreateRouteImport } from './routes/$locale/admin/modules.create'
import { Route as LocaleAdminContextsCreateRouteImport } from './routes/$locale/admin/contexts.create'
import { Route as LocaleAdminContextsIdRouteImport } from './routes/$locale/admin/contexts.$id'
import { Route as LocaleAdminCharactersCreateRouteImport } from './routes/$locale/admin/characters.create'
import { Route as LocaleAdminCharactersIdRouteImport } from './routes/$locale/admin/characters.$id'
import { Route as LocaleAdminApiKeysCreateRouteImport } from './routes/$locale/admin/api-keys.create'
import { Route as LocaleAdminModulesIdIndexRouteImport } from './routes/$locale/admin/modules.$id.index'
import { ServerRoute as ApiAuthSplatServerRouteImport } from './routes/api.auth.$'

const rootServerRouteImport = createServerRootRoute()

const LocaleIndexRoute = LocaleIndexRouteImport.update({
  id: '/$locale/',
  path: '/$locale/',
  getParentRoute: () => rootRouteImport,
} as any)
const LocaleAdminRoute = LocaleAdminRouteImport.update({
  id: '/$locale/admin',
  path: '/$locale/admin',
  getParentRoute: () => rootRouteImport,
} as any)
const LocaleAdminIndexRoute = LocaleAdminIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => LocaleAdminRoute,
} as any)
const LocaleAuthVerifyEmailRoute = LocaleAuthVerifyEmailRouteImport.update({
  id: '/$locale/auth/verify-email',
  path: '/$locale/auth/verify-email',
  getParentRoute: () => rootRouteImport,
} as any)
const LocaleAuthLoginRoute = LocaleAuthLoginRouteImport.update({
  id: '/$locale/auth/login',
  path: '/$locale/auth/login',
  getParentRoute: () => rootRouteImport,
} as any)
const LocaleAuthCreateTeamRoute = LocaleAuthCreateTeamRouteImport.update({
  id: '/$locale/auth/create-team',
  path: '/$locale/auth/create-team',
  getParentRoute: () => rootRouteImport,
} as any)
const LocaleAdminApiKeysIndexRoute = LocaleAdminApiKeysIndexRouteImport.update({
  id: '/api-keys/',
  path: '/api-keys/',
  getParentRoute: () => LocaleAdminRoute,
} as any)
const LocaleModulesIdChatRoute = LocaleModulesIdChatRouteImport.update({
  id: '/$locale/modules/$id/chat',
  path: '/$locale/modules/$id/chat',
  getParentRoute: () => rootRouteImport,
} as any)
const LocaleAdminScenariosCreateRoute =
  LocaleAdminScenariosCreateRouteImport.update({
    id: '/scenarios/create',
    path: '/scenarios/create',
    getParentRoute: () => LocaleAdminRoute,
  } as any)
const LocaleAdminScenariosIdRoute = LocaleAdminScenariosIdRouteImport.update({
  id: '/scenarios/$id',
  path: '/scenarios/$id',
  getParentRoute: () => LocaleAdminRoute,
} as any)
const LocaleAdminModulesCreateRoute =
  LocaleAdminModulesCreateRouteImport.update({
    id: '/modules/create',
    path: '/modules/create',
    getParentRoute: () => LocaleAdminRoute,
  } as any)
const LocaleAdminContextsCreateRoute =
  LocaleAdminContextsCreateRouteImport.update({
    id: '/contexts/create',
    path: '/contexts/create',
    getParentRoute: () => LocaleAdminRoute,
  } as any)
const LocaleAdminContextsIdRoute = LocaleAdminContextsIdRouteImport.update({
  id: '/contexts/$id',
  path: '/contexts/$id',
  getParentRoute: () => LocaleAdminRoute,
} as any)
const LocaleAdminCharactersCreateRoute =
  LocaleAdminCharactersCreateRouteImport.update({
    id: '/characters/create',
    path: '/characters/create',
    getParentRoute: () => LocaleAdminRoute,
  } as any)
const LocaleAdminCharactersIdRoute = LocaleAdminCharactersIdRouteImport.update({
  id: '/characters/$id',
  path: '/characters/$id',
  getParentRoute: () => LocaleAdminRoute,
} as any)
const LocaleAdminApiKeysCreateRoute =
  LocaleAdminApiKeysCreateRouteImport.update({
    id: '/api-keys/create',
    path: '/api-keys/create',
    getParentRoute: () => LocaleAdminRoute,
  } as any)
const LocaleAdminModulesIdIndexRoute =
  LocaleAdminModulesIdIndexRouteImport.update({
    id: '/modules/$id/',
    path: '/modules/$id/',
    getParentRoute: () => LocaleAdminRoute,
  } as any)
const ApiAuthSplatServerRoute = ApiAuthSplatServerRouteImport.update({
  id: '/api/auth/$',
  path: '/api/auth/$',
  getParentRoute: () => rootServerRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/$locale/admin': typeof LocaleAdminRouteWithChildren
  '/$locale': typeof LocaleIndexRoute
  '/$locale/auth/create-team': typeof LocaleAuthCreateTeamRoute
  '/$locale/auth/login': typeof LocaleAuthLoginRoute
  '/$locale/auth/verify-email': typeof LocaleAuthVerifyEmailRoute
  '/$locale/admin/': typeof LocaleAdminIndexRoute
  '/$locale/admin/api-keys/create': typeof LocaleAdminApiKeysCreateRoute
  '/$locale/admin/characters/$id': typeof LocaleAdminCharactersIdRoute
  '/$locale/admin/characters/create': typeof LocaleAdminCharactersCreateRoute
  '/$locale/admin/contexts/$id': typeof LocaleAdminContextsIdRoute
  '/$locale/admin/contexts/create': typeof LocaleAdminContextsCreateRoute
  '/$locale/admin/modules/create': typeof LocaleAdminModulesCreateRoute
  '/$locale/admin/scenarios/$id': typeof LocaleAdminScenariosIdRoute
  '/$locale/admin/scenarios/create': typeof LocaleAdminScenariosCreateRoute
  '/$locale/modules/$id/chat': typeof LocaleModulesIdChatRoute
  '/$locale/admin/api-keys': typeof LocaleAdminApiKeysIndexRoute
  '/$locale/admin/modules/$id': typeof LocaleAdminModulesIdIndexRoute
}
export interface FileRoutesByTo {
  '/$locale': typeof LocaleIndexRoute
  '/$locale/auth/create-team': typeof LocaleAuthCreateTeamRoute
  '/$locale/auth/login': typeof LocaleAuthLoginRoute
  '/$locale/auth/verify-email': typeof LocaleAuthVerifyEmailRoute
  '/$locale/admin': typeof LocaleAdminIndexRoute
  '/$locale/admin/api-keys/create': typeof LocaleAdminApiKeysCreateRoute
  '/$locale/admin/characters/$id': typeof LocaleAdminCharactersIdRoute
  '/$locale/admin/characters/create': typeof LocaleAdminCharactersCreateRoute
  '/$locale/admin/contexts/$id': typeof LocaleAdminContextsIdRoute
  '/$locale/admin/contexts/create': typeof LocaleAdminContextsCreateRoute
  '/$locale/admin/modules/create': typeof LocaleAdminModulesCreateRoute
  '/$locale/admin/scenarios/$id': typeof LocaleAdminScenariosIdRoute
  '/$locale/admin/scenarios/create': typeof LocaleAdminScenariosCreateRoute
  '/$locale/modules/$id/chat': typeof LocaleModulesIdChatRoute
  '/$locale/admin/api-keys': typeof LocaleAdminApiKeysIndexRoute
  '/$locale/admin/modules/$id': typeof LocaleAdminModulesIdIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/$locale/admin': typeof LocaleAdminRouteWithChildren
  '/$locale/': typeof LocaleIndexRoute
  '/$locale/auth/create-team': typeof LocaleAuthCreateTeamRoute
  '/$locale/auth/login': typeof LocaleAuthLoginRoute
  '/$locale/auth/verify-email': typeof LocaleAuthVerifyEmailRoute
  '/$locale/admin/': typeof LocaleAdminIndexRoute
  '/$locale/admin/api-keys/create': typeof LocaleAdminApiKeysCreateRoute
  '/$locale/admin/characters/$id': typeof LocaleAdminCharactersIdRoute
  '/$locale/admin/characters/create': typeof LocaleAdminCharactersCreateRoute
  '/$locale/admin/contexts/$id': typeof LocaleAdminContextsIdRoute
  '/$locale/admin/contexts/create': typeof LocaleAdminContextsCreateRoute
  '/$locale/admin/modules/create': typeof LocaleAdminModulesCreateRoute
  '/$locale/admin/scenarios/$id': typeof LocaleAdminScenariosIdRoute
  '/$locale/admin/scenarios/create': typeof LocaleAdminScenariosCreateRoute
  '/$locale/modules/$id/chat': typeof LocaleModulesIdChatRoute
  '/$locale/admin/api-keys/': typeof LocaleAdminApiKeysIndexRoute
  '/$locale/admin/modules/$id/': typeof LocaleAdminModulesIdIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/$locale/admin'
    | '/$locale'
    | '/$locale/auth/create-team'
    | '/$locale/auth/login'
    | '/$locale/auth/verify-email'
    | '/$locale/admin/'
    | '/$locale/admin/api-keys/create'
    | '/$locale/admin/characters/$id'
    | '/$locale/admin/characters/create'
    | '/$locale/admin/contexts/$id'
    | '/$locale/admin/contexts/create'
    | '/$locale/admin/modules/create'
    | '/$locale/admin/scenarios/$id'
    | '/$locale/admin/scenarios/create'
    | '/$locale/modules/$id/chat'
    | '/$locale/admin/api-keys'
    | '/$locale/admin/modules/$id'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/$locale'
    | '/$locale/auth/create-team'
    | '/$locale/auth/login'
    | '/$locale/auth/verify-email'
    | '/$locale/admin'
    | '/$locale/admin/api-keys/create'
    | '/$locale/admin/characters/$id'
    | '/$locale/admin/characters/create'
    | '/$locale/admin/contexts/$id'
    | '/$locale/admin/contexts/create'
    | '/$locale/admin/modules/create'
    | '/$locale/admin/scenarios/$id'
    | '/$locale/admin/scenarios/create'
    | '/$locale/modules/$id/chat'
    | '/$locale/admin/api-keys'
    | '/$locale/admin/modules/$id'
  id:
    | '__root__'
    | '/$locale/admin'
    | '/$locale/'
    | '/$locale/auth/create-team'
    | '/$locale/auth/login'
    | '/$locale/auth/verify-email'
    | '/$locale/admin/'
    | '/$locale/admin/api-keys/create'
    | '/$locale/admin/characters/$id'
    | '/$locale/admin/characters/create'
    | '/$locale/admin/contexts/$id'
    | '/$locale/admin/contexts/create'
    | '/$locale/admin/modules/create'
    | '/$locale/admin/scenarios/$id'
    | '/$locale/admin/scenarios/create'
    | '/$locale/modules/$id/chat'
    | '/$locale/admin/api-keys/'
    | '/$locale/admin/modules/$id/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  LocaleAdminRoute: typeof LocaleAdminRouteWithChildren
  LocaleIndexRoute: typeof LocaleIndexRoute
  LocaleAuthCreateTeamRoute: typeof LocaleAuthCreateTeamRoute
  LocaleAuthLoginRoute: typeof LocaleAuthLoginRoute
  LocaleAuthVerifyEmailRoute: typeof LocaleAuthVerifyEmailRoute
  LocaleModulesIdChatRoute: typeof LocaleModulesIdChatRoute
}
export interface FileServerRoutesByFullPath {
  '/api/auth/$': typeof ApiAuthSplatServerRoute
}
export interface FileServerRoutesByTo {
  '/api/auth/$': typeof ApiAuthSplatServerRoute
}
export interface FileServerRoutesById {
  __root__: typeof rootServerRouteImport
  '/api/auth/$': typeof ApiAuthSplatServerRoute
}
export interface FileServerRouteTypes {
  fileServerRoutesByFullPath: FileServerRoutesByFullPath
  fullPaths: '/api/auth/$'
  fileServerRoutesByTo: FileServerRoutesByTo
  to: '/api/auth/$'
  id: '__root__' | '/api/auth/$'
  fileServerRoutesById: FileServerRoutesById
}
export interface RootServerRouteChildren {
  ApiAuthSplatServerRoute: typeof ApiAuthSplatServerRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/$locale/': {
      id: '/$locale/'
      path: '/$locale'
      fullPath: '/$locale'
      preLoaderRoute: typeof LocaleIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/$locale/admin': {
      id: '/$locale/admin'
      path: '/$locale/admin'
      fullPath: '/$locale/admin'
      preLoaderRoute: typeof LocaleAdminRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/$locale/admin/': {
      id: '/$locale/admin/'
      path: '/'
      fullPath: '/$locale/admin/'
      preLoaderRoute: typeof LocaleAdminIndexRouteImport
      parentRoute: typeof LocaleAdminRoute
    }
    '/$locale/auth/verify-email': {
      id: '/$locale/auth/verify-email'
      path: '/$locale/auth/verify-email'
      fullPath: '/$locale/auth/verify-email'
      preLoaderRoute: typeof LocaleAuthVerifyEmailRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/$locale/auth/login': {
      id: '/$locale/auth/login'
      path: '/$locale/auth/login'
      fullPath: '/$locale/auth/login'
      preLoaderRoute: typeof LocaleAuthLoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/$locale/auth/create-team': {
      id: '/$locale/auth/create-team'
      path: '/$locale/auth/create-team'
      fullPath: '/$locale/auth/create-team'
      preLoaderRoute: typeof LocaleAuthCreateTeamRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/$locale/admin/api-keys/': {
      id: '/$locale/admin/api-keys/'
      path: '/api-keys'
      fullPath: '/$locale/admin/api-keys'
      preLoaderRoute: typeof LocaleAdminApiKeysIndexRouteImport
      parentRoute: typeof LocaleAdminRoute
    }
    '/$locale/modules/$id/chat': {
      id: '/$locale/modules/$id/chat'
      path: '/$locale/modules/$id/chat'
      fullPath: '/$locale/modules/$id/chat'
      preLoaderRoute: typeof LocaleModulesIdChatRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/$locale/admin/scenarios/create': {
      id: '/$locale/admin/scenarios/create'
      path: '/scenarios/create'
      fullPath: '/$locale/admin/scenarios/create'
      preLoaderRoute: typeof LocaleAdminScenariosCreateRouteImport
      parentRoute: typeof LocaleAdminRoute
    }
    '/$locale/admin/scenarios/$id': {
      id: '/$locale/admin/scenarios/$id'
      path: '/scenarios/$id'
      fullPath: '/$locale/admin/scenarios/$id'
      preLoaderRoute: typeof LocaleAdminScenariosIdRouteImport
      parentRoute: typeof LocaleAdminRoute
    }
    '/$locale/admin/modules/create': {
      id: '/$locale/admin/modules/create'
      path: '/modules/create'
      fullPath: '/$locale/admin/modules/create'
      preLoaderRoute: typeof LocaleAdminModulesCreateRouteImport
      parentRoute: typeof LocaleAdminRoute
    }
    '/$locale/admin/contexts/create': {
      id: '/$locale/admin/contexts/create'
      path: '/contexts/create'
      fullPath: '/$locale/admin/contexts/create'
      preLoaderRoute: typeof LocaleAdminContextsCreateRouteImport
      parentRoute: typeof LocaleAdminRoute
    }
    '/$locale/admin/contexts/$id': {
      id: '/$locale/admin/contexts/$id'
      path: '/contexts/$id'
      fullPath: '/$locale/admin/contexts/$id'
      preLoaderRoute: typeof LocaleAdminContextsIdRouteImport
      parentRoute: typeof LocaleAdminRoute
    }
    '/$locale/admin/characters/create': {
      id: '/$locale/admin/characters/create'
      path: '/characters/create'
      fullPath: '/$locale/admin/characters/create'
      preLoaderRoute: typeof LocaleAdminCharactersCreateRouteImport
      parentRoute: typeof LocaleAdminRoute
    }
    '/$locale/admin/characters/$id': {
      id: '/$locale/admin/characters/$id'
      path: '/characters/$id'
      fullPath: '/$locale/admin/characters/$id'
      preLoaderRoute: typeof LocaleAdminCharactersIdRouteImport
      parentRoute: typeof LocaleAdminRoute
    }
    '/$locale/admin/api-keys/create': {
      id: '/$locale/admin/api-keys/create'
      path: '/api-keys/create'
      fullPath: '/$locale/admin/api-keys/create'
      preLoaderRoute: typeof LocaleAdminApiKeysCreateRouteImport
      parentRoute: typeof LocaleAdminRoute
    }
    '/$locale/admin/modules/$id/': {
      id: '/$locale/admin/modules/$id/'
      path: '/modules/$id'
      fullPath: '/$locale/admin/modules/$id'
      preLoaderRoute: typeof LocaleAdminModulesIdIndexRouteImport
      parentRoute: typeof LocaleAdminRoute
    }
  }
}
declare module '@tanstack/react-start/server' {
  interface ServerFileRoutesByPath {
    '/api/auth/$': {
      id: '/api/auth/$'
      path: '/api/auth/$'
      fullPath: '/api/auth/$'
      preLoaderRoute: typeof ApiAuthSplatServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
  }
}

interface LocaleAdminRouteChildren {
  LocaleAdminIndexRoute: typeof LocaleAdminIndexRoute
  LocaleAdminApiKeysCreateRoute: typeof LocaleAdminApiKeysCreateRoute
  LocaleAdminCharactersIdRoute: typeof LocaleAdminCharactersIdRoute
  LocaleAdminCharactersCreateRoute: typeof LocaleAdminCharactersCreateRoute
  LocaleAdminContextsIdRoute: typeof LocaleAdminContextsIdRoute
  LocaleAdminContextsCreateRoute: typeof LocaleAdminContextsCreateRoute
  LocaleAdminModulesCreateRoute: typeof LocaleAdminModulesCreateRoute
  LocaleAdminScenariosIdRoute: typeof LocaleAdminScenariosIdRoute
  LocaleAdminScenariosCreateRoute: typeof LocaleAdminScenariosCreateRoute
  LocaleAdminApiKeysIndexRoute: typeof LocaleAdminApiKeysIndexRoute
  LocaleAdminModulesIdIndexRoute: typeof LocaleAdminModulesIdIndexRoute
}

const LocaleAdminRouteChildren: LocaleAdminRouteChildren = {
  LocaleAdminIndexRoute: LocaleAdminIndexRoute,
  LocaleAdminApiKeysCreateRoute: LocaleAdminApiKeysCreateRoute,
  LocaleAdminCharactersIdRoute: LocaleAdminCharactersIdRoute,
  LocaleAdminCharactersCreateRoute: LocaleAdminCharactersCreateRoute,
  LocaleAdminContextsIdRoute: LocaleAdminContextsIdRoute,
  LocaleAdminContextsCreateRoute: LocaleAdminContextsCreateRoute,
  LocaleAdminModulesCreateRoute: LocaleAdminModulesCreateRoute,
  LocaleAdminScenariosIdRoute: LocaleAdminScenariosIdRoute,
  LocaleAdminScenariosCreateRoute: LocaleAdminScenariosCreateRoute,
  LocaleAdminApiKeysIndexRoute: LocaleAdminApiKeysIndexRoute,
  LocaleAdminModulesIdIndexRoute: LocaleAdminModulesIdIndexRoute,
}

const LocaleAdminRouteWithChildren = LocaleAdminRoute._addFileChildren(
  LocaleAdminRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  LocaleAdminRoute: LocaleAdminRouteWithChildren,
  LocaleIndexRoute: LocaleIndexRoute,
  LocaleAuthCreateTeamRoute: LocaleAuthCreateTeamRoute,
  LocaleAuthLoginRoute: LocaleAuthLoginRoute,
  LocaleAuthVerifyEmailRoute: LocaleAuthVerifyEmailRoute,
  LocaleModulesIdChatRoute: LocaleModulesIdChatRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
const rootServerRouteChildren: RootServerRouteChildren = {
  ApiAuthSplatServerRoute: ApiAuthSplatServerRoute,
}
export const serverRouteTree = rootServerRouteImport
  ._addFileChildren(rootServerRouteChildren)
  ._addFileTypes<FileServerRouteTypes>()
